const loanAmountInput = document.getElementById("loan-amount");
const loanTermButtons = document.querySelectorAll(".loan-term button");
const repaymentTabs = document.querySelectorAll(".repayment-tabs button");
const interestSlider = document.getElementById("interest-slider");
const loanTypeButtons = document.querySelectorAll(".loan-type button");
const loanPurposeSelect = document.getElementById("loan-purpose");

const repaymentValue = document.getElementById("repayment-value");
const repaymentFrequency = document.getElementById("repayment-frequency");
const totalInterest = document.getElementById("total-interest");
const totalRepayments = document.getElementById("total-repayments");
const interestRateDisplay = document.getElementById("interest-rate");

let loanAmount = parseFloat(loanAmountInput.value);
let loanTerm = 2; // Default to 2 years
let interestRate = 8; // Default to 8% for all purposes
let frequency = "weekly"; // Default frequency

function calculateRepayments() {
  const annualRate = interestRate / 100;
  let paymentsPerYear;

  if (frequency === "weekly") {
    paymentsPerYear = 52;
  } else if (frequency === "fortnightly") {
    paymentsPerYear = 26;
  } else if (frequency === "monthly") {
    paymentsPerYear = 12;
  }

  const totalPayments = loanTerm * paymentsPerYear;
  const periodicRate = annualRate / paymentsPerYear;

  const repayment = (loanAmount * periodicRate) / (1 - Math.pow(1 + periodicRate, -totalPayments));

  const totalRepayment = repayment * totalPayments;
  const totalInterestPaid = totalRepayment - loanAmount;

  repaymentValue.textContent = Math.round(repayment);
  totalInterest.textContent = Math.round(totalInterestPaid);
  totalRepayments.textContent = Math.round(totalRepayment);
}

function updateSliderBackground() {
  const value = interestSlider.value;
  const min = interestSlider.min;
  const max = interestSlider.max;
  const percentage = ((value - min) / (max - min)) * 100;
  interestSlider.style.background = `linear-gradient(to right, #a6fcc6 ${percentage}%, #fff ${percentage}%)`;
}

function updateInterestRate(newRate, minRange, maxRange) {
  interestRate = newRate;
  interestSlider.min = minRange;
  interestSlider.max = maxRange;
  interestSlider.value = newRate;
  interestRateDisplay.textContent = `${newRate.toFixed(2)}%`;
  updateSliderBackground();
  calculateRepayments();
}

// Handle loan type buttons
loanTypeButtons.forEach((button) => {
  button.addEventListener("click", () => {
    loanTypeButtons.forEach((btn) => btn.classList.remove("active"));
    button.classList.add("active");

    if (button.textContent === "Fixed Rate Loan") {
      updateInterestRate(8, 5, 12); // Changed from 16 to 8
    } else if (button.textContent === "Variable Rate Loan") {
      updateInterestRate(8, 5, 12); // Changed from 15 to 8
    } else if (button.textContent === "Secured Personal Loan") {
      updateInterestRate(8, 5, 12); // Changed from 8.49 to 8
    }
  });
});

// Handle loan purpose dropdown (car, truck, ute, etc.)
loanPurposeSelect.addEventListener("change", () => {
  // Always reset to default 8% for all options
  updateInterestRate(8, 5, 12);
});

loanAmountInput.addEventListener("input", (e) => {
  loanAmount = parseFloat(e.target.value);
  calculateRepayments();
});

loanTermButtons.forEach((button) => {
  button.addEventListener("click", () => {
    loanTermButtons.forEach((btn) => btn.classList.remove("active"));
    button.classList.add("active");
    loanTerm = parseInt(button.dataset.years);
    calculateRepayments();
  });
});

repaymentTabs.forEach((tab) => {
  tab.addEventListener("click", () => {
    repaymentTabs.forEach((btn) => btn.classList.remove("active"));
    tab.classList.add("active");
    frequency = tab.dataset.frequency;
    repaymentFrequency.textContent = frequency.charAt(0).toUpperCase() + frequency.slice(1);
    calculateRepayments();
  });
});

interestSlider.addEventListener("input", (e) => {
  interestRate = parseFloat(e.target.value);
  interestRateDisplay.textContent = `${interestRate.toFixed(2)}%`;
  calculateRepayments();
  updateSliderBackground();
});

// Initialize
updateSliderBackground();
calculateRepayments();


// Modal functionality
const loanInfoBtn = document.getElementById("loan-info-btn");
const modal = document.getElementById("loan-info-modal");
const closeBtn = document.querySelector(".close-btn");
const okBtn = document.querySelector(".pop-up-ok-button");
const body = document.body;

loanInfoBtn.addEventListener("click", () => {
  modal.style.display = "block";
  body.classList.add("no-scroll");
});

closeBtn.addEventListener("click", () => {
  modal.style.display = "none";
  body.classList.remove("no-scroll");
});

okBtn.addEventListener("click", () => {
  modal.style.display = "none";
  body.classList.remove("no-scroll");
});

window.addEventListener("click", (e) => {
  if (e.target === modal) {
    modal.style.display = "none";
    body.classList.remove("no-scroll");
  }
});

// Dropdown functionality
const dropdowns = document.querySelectorAll(".dropdown");

dropdowns.forEach((dropdown) => {
  const btn = dropdown.querySelector(".dropdown-btn");
  const content = dropdown.querySelector(".dropdown-content");

  btn.addEventListener("click", () => {
    const isActive = dropdown.classList.contains("active");

    dropdowns.forEach((d) => {
      d.classList.remove("active");
      d.querySelector(".dropdown-content").style.height = "0";
    });

    if (!isActive) {
      dropdown.classList.add("active");
      content.style.height = `${content.scrollHeight}px`;
    } else {
      dropdown.classList.remove("active");
      content.style.height = "0";
    }
  });
});

modal.addEventListener("wheel", (e) => {
  e.stopPropagation();
});
